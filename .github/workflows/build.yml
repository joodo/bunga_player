name: Build App
on:
  workflow_dispatch:
jobs:
  build-windows:
    if: false
    name: Build Windows
    runs-on: windows-latest
    steps:
    - name: Clone repository
      uses: actions/checkout@v4
    - name: Set up Flutter
      uses: subosito/flutter-action@v2
      with:
          channel: stable
    - name: Start building
      run: flutter build windows
    - name: Generate inno setup script
      run: dart windows/installer/generate_inno.dart
    - name: Compile .ISS to .EXE Installer
      uses: Minionguyjpro/Inno-Setup-Action@v1.2.4
      with:
        path: build/innosetup.iss
        options: /O+
    - name: Upload artifacts
      uses: actions/upload-artifact@v4
      with:
        name: release-windows
        path: "build/windows/*.exe"
        retention-days: 5
        overwrite: true
  
  build-android:
    if: false
    name: Build Android
    runs-on: ubuntu-latest
    steps:
    - name: Set up Java
      uses: actions/setup-java@v4
      with:
        distribution: 'temurin'
        java-version: '17'
    - name: Set up Flutter
      uses: subosito/flutter-action@v2
      with:
          channel: stable

    - name: Clone repository
      uses: actions/checkout@v4
    - name: Start building
      run: |
        flutter build apk --split-per-abi
    - name: Rename outputs
      run: |
        VERSION=$(yq -r .version pubspec.yaml)
        cd build/app/outputs/apk/release/
        sudo apt-get update
        sudo apt-get install mmv
        mmv -m "app-*-release-unsigned.apk" "bunga_player_v${VERSION}_#1.apk"

    - name: Create the Keystore
      env:
        KEYSTORE_BASE64: ${{ secrets.ANDROID_KEYSTORE_BASE64 }}
      run: |
        # import keystore from secrets
        echo $KEYSTORE_BASE64 | base64 -d > $RUNNER_TEMP/my_production.keystore
    - name: Sign Android App Bundle
      run: >
        for i in build/app/outputs/apk/release/*.apk; do

        jarsigner
        -keystore $RUNNER_TEMP/my_production.keystore
        -storepass ${{ secrets.ANDROID_KEYSTORE_PASSWORD }}
        -keypass ${{ secrets.ANDROID_KEYSTORE_PASSWORD_ALIAS }}
        -sigalg SHA256withRSA
        -digestalg SHA-256
        "$i"
        upload

        done
        
    - name: Upload artifacts
      uses: actions/upload-artifact@v4
      with:
        name: release-android
        path: "build/app/outputs/apk/release/*.apk"
        retention-days: 5
        overwrite: true

  build-macos-ios:
    name: Build macOS
    runs-on: macos-latest
    steps:
    - name: Install Apple Certificate
      uses: apple-actions/import-codesign-certs@v3
      with: 
        p12-file-base64: ${{ secrets.IOS_P12_BASE64 }}
        p12-password: ${{ secrets.IOS_P12_PASSWORD }}

    - name: Set up Flutter
      uses: subosito/flutter-action@v2
      with:
          channel: stable

    - name: Clone repository
      uses: actions/checkout@v4
    
    - name: Build macOS
      run: flutter build macos --release
    - name: Codesign executable
      run: >
        codesign --force --deep
        -s ${{ secrets.IOS_IDENTITY_ID }}
        ./build/macos/Build/Products/Release/bunga_player.app
    - name: Generate dmg
      run: |
        # Rename app
        mv 'build/macos/Build/Products/Release/bunga_player.app' 'build/macos/Build/Products/Release/Bunga Player.app'
        # Generate dmg file name
        VERSION=$(yq -r .version pubspec.yaml)
        OUTPUT_FILE=bunga_player_v${VERSION}.dmg
        # Install appdmg
        curl "https://nodejs.org/dist/latest/$(curl -s https://nodejs.org/dist/latest/ | grep "pkg" | cut -d'"' -f 2)" -o "$HOME/Downloads/node-latest.pkg" && sudo installer -store -pkg "$HOME/Downloads/node-latest.pkg" -target "/"
        npm install --global appdmg
        # Generate dmg
        appdmg 'macos/deploy/deploy.json' "$OUTPUT_FILE"
        ls . -al
        ls build/macos/Build/Products/Release -al
    
    - name: Upload artifacts
      uses: actions/upload-artifact@v4
      with:
        name: release-macos
        path: "*.dmg"
        retention-days: 5
        overwrite: true
